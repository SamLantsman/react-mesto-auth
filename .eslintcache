[{"/Users/samlantsman/dev/mesto-react/src/index.js":"1","/Users/samlantsman/dev/mesto-react/src/reportWebVitals.js":"2","/Users/samlantsman/dev/mesto-react/src/components/App.js":"3","/Users/samlantsman/dev/mesto-react/src/components/Header.js":"4","/Users/samlantsman/dev/mesto-react/src/components/Main.js":"5","/Users/samlantsman/dev/mesto-react/src/components/Footer.js":"6","/Users/samlantsman/dev/mesto-react/src/components/PopupWithForm.js":"7","/Users/samlantsman/dev/mesto-react/src/utils/api.js":"8","/Users/samlantsman/dev/mesto-react/src/components/Card.js":"9","/Users/samlantsman/dev/mesto-react/src/components/ImagePopup.js":"10","/Users/samlantsman/dev/mesto-react/src/contexts/CurrentUserContext.js":"11","/Users/samlantsman/dev/mesto-react/src/components/EditProfilePopup.js":"12","/Users/samlantsman/dev/mesto-react/src/components/EditAvatarPopup.js":"13","/Users/samlantsman/dev/mesto-react/src/components/AddCardPopup.js":"14","/Users/samlantsman/dev/mesto-react/src/components/ConfirmDeleteCardPopup.js":"15","/Users/samlantsman/dev/mesto-react/src/components/Login.js":"16","/Users/samlantsman/dev/mesto-react/src/components/Register.js":"17","/Users/samlantsman/dev/mesto-react/src/components/ProtectedRoute.js":"18","/Users/samlantsman/dev/mesto-react/src/utils/auth.js":"19","/Users/samlantsman/dev/mesto-react/src/components/InfoToolTip.js":"20"},{"size":392,"mtime":1616344003576,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1610894610097,"results":"23","hashOfConfig":"22"},{"size":8823,"mtime":1616699395411,"results":"24","hashOfConfig":"22"},{"size":555,"mtime":1616001420533,"results":"25","hashOfConfig":"22"},{"size":2910,"mtime":1616425850480,"results":"26","hashOfConfig":"22"},{"size":176,"mtime":1611139562179,"results":"27","hashOfConfig":"22"},{"size":717,"mtime":1616752004312,"results":"28","hashOfConfig":"22"},{"size":2785,"mtime":1611829337881,"results":"29","hashOfConfig":"22"},{"size":1316,"mtime":1611769366046,"results":"30","hashOfConfig":"22"},{"size":466,"mtime":1611152479579,"results":"31","hashOfConfig":"22"},{"size":83,"mtime":1611520398928,"results":"32","hashOfConfig":"22"},{"size":2116,"mtime":1615633674868,"results":"33","hashOfConfig":"22"},{"size":948,"mtime":1611832203485,"results":"34","hashOfConfig":"22"},{"size":1551,"mtime":1612008500005,"results":"35","hashOfConfig":"22"},{"size":564,"mtime":1611832372281,"results":"36","hashOfConfig":"22"},{"size":1456,"mtime":1616751939825,"results":"37","hashOfConfig":"22"},{"size":1627,"mtime":1616752030758,"results":"38","hashOfConfig":"22"},{"size":320,"mtime":1616425867266,"results":"39","hashOfConfig":"22"},{"size":1252,"mtime":1615923904031,"results":"40","hashOfConfig":"22"},{"size":710,"mtime":1616005910589,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1adjmoq",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/samlantsman/dev/mesto-react/src/index.js",[],["85","86"],"/Users/samlantsman/dev/mesto-react/src/reportWebVitals.js",[],"/Users/samlantsman/dev/mesto-react/src/components/App.js",["87"],"import \"../index.css\";\nimport React from \"react\";\nimport Main from \"./Main\";\nimport api from \"../utils/api\";\nimport * as auth from \"../utils/auth\";\nimport Login from \"../components/Login\";\nimport Register from \"../components/Register\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport InfoToolTip from \"./InfoToolTip\";\nimport successSign from \"../images/info-tool-tip__success.png\";\nimport failSign from \"../images/info-tool-tip__fail.png\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { Switch, Route, useHistory, Link, Redirect } from \"react-router-dom\";\n\nfunction App() {\n  const history = useHistory();\n\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((user) => {\n        setCurrentUser(user);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    api\n      .getCardsInfo()\n      .then((data) => {\n        setCards(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    tockenCheck();\n  }, []);\n\n  React.useEffect(() => {\n    if (isLoggedIn) {\n      history.push(\"/main\");\n    }\n  }, [isLoggedIn, history]);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(\n    false\n  );\n\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n  const [isEditAvatarPopupOpen, setIsUpdateAvaterPopupOpen] = React.useState(\n    false\n  );\n\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = React.useState(\n    false\n  );\n\n  const [selectedCard, setSelectedCard] = React.useState({\n    isOpen: false,\n    link: \"\",\n    name: \"\",\n  });\n\n  const [cards, setCards] = React.useState([]);\n\n  const [cardToDelete, setCardToDelete] = React.useState(\"\");\n\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  function handleCardDelete() {\n    setIsLoading(true);\n    api\n      .deleteCard(cardToDelete)\n      .then(() => {\n        const newCards = cards.filter((element) => {\n          return element._id !== cardToDelete;\n        });\n\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        closeAllPopups();\n      });\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsUpdateAvaterPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleDeleteCardClick(card) {\n    setCardToDelete(card._id);\n    setIsDeleteCardPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({\n      isOpen: true,\n      link: card.link,\n      name: card.name,\n    });\n  }\n\n  function handleAddCardSubmit(newCard) {\n    setIsLoading(true);\n    api\n      .addNewCard(newCard)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        closeAllPopups();\n      });\n  }\n\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsUpdateAvaterPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeleteCardPopupOpen(false);\n    setSelectedCard({ isOpen: false, link: \"\", name: \"\" });\n    setIsLoading(false);\n  }\n\n  function handleUpdateUser(data) {\n    setIsLoading(true);\n    api\n      .updateUserInfo(data)\n      .then((newUser) => {\n        setCurrentUser(newUser);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        closeAllPopups();\n      });\n  }\n\n  function handleUpdateAvatar(link) {\n    setIsLoading(true);\n    api\n      .updateAvatar(link)\n      .then((userWithNewAvatar) => {\n        setCurrentUser(userWithNewAvatar);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        closeAllPopups();\n      });\n  }\n\n  const [email, setEmail] = React.useState(\"\");\n\n  function handleLogin(data) {\n    auth\n      .authorize(data.password, data.email)\n      .then((data) => {\n        console.log(data.token);\n        if (data.token) {\n          history.push(\"/main\");\n        }\n      })\n      .catch((err) => console.log(err));\n    setIsLoggedIn(true);\n    setEmail(data.email);\n  }\n\n  function tockenCheck() {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      auth\n        .getContent(token)\n        .then((res) => {\n          if (res) {\n            setIsLoggedIn(true);\n            setEmail(res.data.email);\n            history.push(\"/main\");\n          }\n        })\n        .catch((e) => console.log(e));\n    }\n  }\n\n  function signOut() {\n    localStorage.removeItem(\"token\");\n    setIsLoggedIn(false);\n  }\n\n  const [isRegistered, setIsRegistered] = React.useState(false);\n\n  const [isInfoToolTipPopupOpen, setIsInfoToolTopPopupOpen] = React.useState(\n    false\n  );\n\n  function closeRegistrationPopup() {\n    setIsInfoToolTopPopupOpen(false);\n    if (isRegistered) {\n      history.push(\"/signin\");\n    }\n  }\n\n  function handleRegistration(data) {\n    auth\n      .register(data.password, data.email)\n      .then((res) => {\n        if (res) {\n          console.log(\"я тут\");\n          setIsRegistered(true);\n          console.log(isRegistered);\n          setIsInfoToolTopPopupOpen(true);\n          console.log(isInfoToolTipPopupOpen);\n        } else {\n          setIsInfoToolTopPopupOpen(true);\n          return {\n            message: \"Что-то пошло не так!\",\n          };\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <div className=\"page\">\n          <Switch>\n            <Route exact path=\"/\">\n              {isLoggedIn ? <Redirect to=\"/main\" /> : <Redirect to=\"/signup\" />}\n            </Route>\n            <Route path=\"/signin\">\n              <Login\n                title=\"Вход\"\n                button=\"Войти\"\n                handleSubmit={handleLogin}\n                email={email}\n                isInfoToolTipPopupOpen={isInfoToolTipPopupOpen}\n                isRegistered={isRegistered}\n                closeRegistrationPopup={closeRegistrationPopup}\n              />\n            </Route>\n            <Route path=\"/signup\">\n              <Register\n                title=\"Регистрация\"\n                button=\"Зарегистрироваться\"\n                onClick={<Link to=\"/signin\" />}\n                handleSubmit={handleRegistration}\n              />\n              <InfoToolTip\n                isOpen={isInfoToolTipPopupOpen}\n                title={\n                  isRegistered\n                    ? \"Вы успешно зарегистрировались!\"\n                    : \"Что-то пошло не так! Попробуйте еще раз.\"\n                }\n                src={isRegistered ? successSign : failSign}\n                name=\"success\"\n                onClose={closeRegistrationPopup}\n              />\n            </Route>\n            <ProtectedRoute\n              path=\"/main\"\n              component={Main}\n              loggedIn={isLoggedIn}\n              onEditProfile={handleEditProfileClick}\n              onEditAvatar={handleEditAvatarClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              cards={cards}\n              onCardLike={handleCardLike}\n              onCardDelete={handleDeleteCardClick}\n              isOpen={selectedCard.isOpen}\n              src={selectedCard.link}\n              name={selectedCard.name}\n              onClose={closeAllPopups}\n              isOpenProfilePopup={isEditProfilePopupOpen}\n              onUpdateUser={handleUpdateUser}\n              isLoading={isLoading}\n              isOpenAddPlace={isAddPlacePopupOpen}\n              onAddCard={handleAddCardSubmit}\n              isOpenAvatar={isEditAvatarPopupOpen}\n              onUpdateAvatar={handleUpdateAvatar}\n              isOpenDeleteCard={isDeleteCardPopupOpen}\n              onConfirmDeleteCard={handleCardDelete}\n              onClick={signOut}\n              email={email}\n              faded={isLoggedIn ? \"faded\" : \"\"}\n            ></ProtectedRoute>\n          </Switch>\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/samlantsman/dev/mesto-react/src/components/Header.js",[],"/Users/samlantsman/dev/mesto-react/src/components/Main.js",[],"/Users/samlantsman/dev/mesto-react/src/components/Footer.js",[],"/Users/samlantsman/dev/mesto-react/src/components/PopupWithForm.js",[],"/Users/samlantsman/dev/mesto-react/src/utils/api.js",[],"/Users/samlantsman/dev/mesto-react/src/components/Card.js",[],"/Users/samlantsman/dev/mesto-react/src/components/ImagePopup.js",[],"/Users/samlantsman/dev/mesto-react/src/contexts/CurrentUserContext.js",[],"/Users/samlantsman/dev/mesto-react/src/components/EditProfilePopup.js",["88","89"],"import PopupWithForm from \"./PopupWithForm\";\nimport React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nfunction EditProfilePopup(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const [name, setName] = React.useState(\"\");\n  const [job, setJob] = React.useState(\"\");\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setJob(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateUser({\n      name: name,\n      about: job,\n    });\n  }\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleJobChange(e) {\n    setJob(e.target.value);\n  }\n\n  React.useEffect(() => {\n    if (name !== undefined && job !== undefined) {\n      const isNameFilled = name.length >= 2 && name.length <= 40;\n      const nameFieldValid = isNameFilled;\n\n      const isJobFilled = job.length >= 2 && job.length <= 200;\n      const jobFieldValid = isJobFilled;\n    }\n  });\n\n  return (\n    <PopupWithForm\n      onClose={props.onClose}\n      title=\"Редактировать профиль\"\n      name=\"editProfile\"\n      button={props.isLoading ? \"Редактирую...\" : \"Сохранить\"}\n      isOpen={props.isOpen ? true : false}\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Имя\"\n        className=\"popup__text popup__text-name\"\n        maxLength=\"40\"\n        minLength=\"2\"\n        required\n        id=\"profile-input\"\n        defaultValue={name}\n        onChange={handleNameChange}\n      />\n      <span className=\"popup__text_error\" id=\"profile-input-error\"></span>\n      <input\n        type=\"text\"\n        name=\"job\"\n        placeholder=\"Вид деятельности\"\n        className=\"popup__text popup__text-job\"\n        maxLength=\"200\"\n        minLength=\"2\"\n        required\n        id=\"job-input\"\n        defaultValue={job}\n        onChange={handleJobChange}\n      />\n      <span className=\"popup__text_error\" id=\"job-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","/Users/samlantsman/dev/mesto-react/src/components/EditAvatarPopup.js",[],"/Users/samlantsman/dev/mesto-react/src/components/AddCardPopup.js",[],"/Users/samlantsman/dev/mesto-react/src/components/ConfirmDeleteCardPopup.js",[],"/Users/samlantsman/dev/mesto-react/src/components/Login.js",[],"/Users/samlantsman/dev/mesto-react/src/components/Register.js",[],"/Users/samlantsman/dev/mesto-react/src/components/ProtectedRoute.js",[],"/Users/samlantsman/dev/mesto-react/src/utils/auth.js",[],"/Users/samlantsman/dev/mesto-react/src/components/InfoToolTip.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":46,"column":6,"nodeType":"96","endLine":46,"endColumn":8,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":34,"column":13,"nodeType":"100","messageId":"101","endLine":34,"endColumn":27},{"ruleId":"98","severity":1,"message":"102","line":37,"column":13,"nodeType":"100","messageId":"101","endLine":37,"endColumn":26},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'tockenCheck'. Either include it or remove the dependency array.","ArrayExpression",["105"],"no-unused-vars","'nameFieldValid' is assigned a value but never used.","Identifier","unusedVar","'jobFieldValid' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [tockenCheck]",{"range":"108","text":"109"},[1190,1192],"[tockenCheck]"]